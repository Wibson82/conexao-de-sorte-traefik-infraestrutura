name: "üåê Traefik Infrastructure ‚Äì CI/CD Pipeline"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  SERVICE_NAME: traefik-infrastructure

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-and-build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4.3.0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-yaml

      - name: Prepare scripts
        run: |
          chmod +x .github/workflows/scripts/validate-traefik.sh
          chmod +x .github/workflows/scripts/security-validation.sh

      - name: Validate Traefik Configs
        run: .github/workflows/scripts/validate-traefik.sh

      - name: Security Validation
        run: .github/workflows/scripts/security-validation.sh

      - name: Create secrets directory for artifact
        run: |
          mkdir -p secrets
          # Criar arquivo b√°sico de auth se n√£o existir
          if [ ! -f secrets/traefik-basicauth ]; then
            echo 'admin:$2y$10$rQ.0eEWJx7mQ8k4yR4x9/.2l0JUqN7zYTHmFePXkz1YRkFvqRZ5hW' > secrets/traefik-basicauth
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4.5.0
        with:
          name: traefik-configs
          path: |
            docker-compose.yml
            .env.ci
            traefik/
            letsencrypt/
            secrets/

  deploy-selfhosted:
    needs: validate-and-build
    runs-on: [ self-hosted, Linux, X64, conexao, conexao-de-sorte-traefik-infraestrutura ]
    timeout-minutes: 15
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      contents: read
    env:
      DOCKER_NETWORK_NAME: conexao-network-swarm  # Usar rede overlay existente
      STACK_NAME: conexao-traefik
      COMPOSE_FILE: docker-compose.yml  # OBRIGAT√ìRIO: Usar arquivo consolidado
    steps:
      - uses: actions/checkout@v4.3.0
        with:
          clean: true
          fetch-depth: 1
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: traefik-configs
          path: .

      # REMOVIDO: Azure CLI n√£o deve ser usado em produ√ß√£o
      # Traefik usa apenas Docker Secrets sincronizados pela infraestrutura-core

      - name: "üîç Validar Docker Secrets e Azure Key Vault (OIDC-Only)"
        shell: bash
        env:
          # Vari√°veis Azure Key Vault via OIDC (dispon√≠veis no runner)
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_KEYVAULT_ENDPOINT: ${{ secrets.AZURE_KEYVAULT_ENDPOINT }}
        run: |
          # Criar secrets Docker se n√£o existirem (ambiente limpo)
          chmod +x .github/workflows/scripts/create-docker-secrets.sh
          .github/workflows/scripts/create-docker-secrets.sh
          
          # Usar script consolidado para valida√ß√£o de secrets
          chmod +x .github/workflows/scripts/validate-secrets.sh
          .github/workflows/scripts/validate-secrets.sh

      - name: Prepare scripts
        run: |
          chmod +x .github/workflows/scripts/deploy-traefik.sh .github/workflows/scripts/healthcheck-traefik.sh .github/workflows/scripts/connectivity-validation.sh .github/workflows/scripts/connect-backend-to-swarm.sh .github/workflows/scripts/create-docker-secrets.sh
          # Usar arquivo de ambiente espec√≠fico para CI/CD
          cp .env.ci .env

      - name: üîó Connect backend-prod to Swarm network
        run: |
          echo "üîó Conectando backend-prod √† rede overlay do Swarm..."
          .github/workflows/scripts/connect-backend-to-swarm.sh

      - name: üöÄ Deploy Traefik Stack (Swarm-Only)
        env:
          STACK_NAME: conexao-traefik
          COMPOSE_FILE: docker-compose.yml  # OBRIGAT√ìRIO: Arquivo consolidado
        run: |
          echo "üöÄ Iniciando deploy do Traefik com Docker Swarm..."

          # Executar deploy usando o arquivo consolidado
          chmod +x .github/workflows/scripts/deploy-traefik.sh
          .github/workflows/scripts/deploy-traefik.sh

      - name: Healthcheck Traefik
        env:
          STACK_NAME: conexao-traefik
        run: .github/workflows/scripts/healthcheck-traefik.sh

      - name: Connectivity Validation
        env:
          STACK_NAME: conexao-traefik
        run: .github/workflows/scripts/connectivity-validation.sh
