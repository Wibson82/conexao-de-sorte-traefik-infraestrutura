name: Security - Verifica√ß√µes de Seguran√ßa

on:
  schedule:
    # Executar diariamente √†s 02:00 UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_BUILDKIT: 1

jobs:
  # =============================================================================
  # AN√ÅLISE DE VULNERABILIDADES
  # =============================================================================
  vulnerability-scan:
    name: üîç Scan de Vulnerabilidades
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: üîç Scan de secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
        
    - name: üê≥ Scan de imagens Docker
      run: |
        # Instalar Trivy
        sudo apt-get update
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy
        
        # Scan da imagem Traefik
        trivy image --severity HIGH,CRITICAL traefik:v3.0
        
    - name: üìã An√°lise de configura√ß√µes
      run: |
        echo "üîç Verificando configura√ß√µes de seguran√ßa..."
        
        # Verificar se HTTPS est√° habilitado
        if ! grep -q "websecure" config/traefik.yml; then
          echo "‚ö†Ô∏è HTTPS n√£o est√° configurado!"
        fi
        
        # Verificar certificados SSL
        if ! grep -q "letsencrypt" config/traefik.yml; then
          echo "‚ö†Ô∏è Let's Encrypt n√£o est√° configurado!"
        fi
        
        # Verificar headers de seguran√ßa
        if ! grep -q "X-Frame-Options" dynamic/middlewares.yml; then
          echo "‚ö†Ô∏è Header X-Frame-Options n√£o configurado!"
        fi
        
        if ! grep -q "X-Content-Type-Options" dynamic/middlewares.yml; then
          echo "‚ö†Ô∏è Header X-Content-Type-Options n√£o configurado!"
        fi
        
        if ! grep -q "Strict-Transport-Security" dynamic/middlewares.yml; then
          echo "‚ö†Ô∏è HSTS n√£o configurado!"
        fi

  # =============================================================================
  # VERIFICA√á√ÉO DE CERTIFICADOS SSL
  # =============================================================================
  ssl-check:
    name: üîí Verifica√ß√£o SSL
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: üîí Verificar configura√ß√£o SSL
      run: |
        echo "üîç Verificando configura√ß√µes SSL/TLS..."
        
        # Verificar vers√µes TLS m√≠nimas
        if grep -q "VersionTLS12" dynamic/services.yml; then
          echo "‚úÖ TLS 1.2 configurado como m√≠nimo"
        else
          echo "‚ö†Ô∏è Vers√£o m√≠nima do TLS n√£o especificada"
        fi
        
        # Verificar cipher suites
        if grep -q "cipherSuites" dynamic/services.yml; then
          echo "‚úÖ Cipher suites configurados"
        else
          echo "‚ö†Ô∏è Cipher suites n√£o especificados"
        fi
        
        # Verificar SNI strict
        if grep -q "sniStrict: true" dynamic/services.yml; then
          echo "‚úÖ SNI strict habilitado"
        else
          echo "‚ö†Ô∏è SNI strict n√£o habilitado"
        fi
        
    - name: üåê Teste de conectividade SSL (simulado)
      run: |
        echo "üîç Testando configura√ß√µes SSL..."
        
        # Simular testes SSL (substituir por testes reais quando em produ√ß√£o)
        echo "üìã Dom√≠nios para verificar:"
        echo "  - conexaodesorte.com.br"
        echo "  - www.conexaodesorte.com.br"
        echo "  - traefik.conexaodesorte.com.br"
        
        # Exemplo de comando real (descomente quando em produ√ß√£o):
        # openssl s_client -connect conexaodesorte.com.br:443 -servername conexaodesorte.com.br < /dev/null
        
        echo "‚úÖ Verifica√ß√µes SSL simuladas conclu√≠das"

  # =============================================================================
  # AUDITORIA DE CONFIGURA√á√ïES
  # =============================================================================
  config-audit:
    name: üìä Auditoria de Configura√ß√µes
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: üìä An√°lise de configura√ß√µes de seguran√ßa
      run: |
        echo "üìä Relat√≥rio de Auditoria de Seguran√ßa"
        echo "======================================"
        
        # Contar middlewares de seguran√ßa
        SECURITY_MIDDLEWARES=$(grep -c "security-headers\|rate-limit\|auth" dynamic/middlewares.yml || echo 0)
        echo "üõ°Ô∏è Middlewares de seguran√ßa: $SECURITY_MIDDLEWARES"
        
        # Verificar autentica√ß√£o
        AUTH_MIDDLEWARES=$(grep -c "basicAuth\|forwardAuth\|digestAuth" dynamic/middlewares.yml || echo 0)
        echo "üîê Middlewares de autentica√ß√£o: $AUTH_MIDDLEWARES"
        
        # Verificar rate limiting
        RATE_LIMIT=$(grep -c "rate-limit" dynamic/middlewares.yml || echo 0)
        echo "‚è±Ô∏è Rate limiting configurado: $RATE_LIMIT"
        
        # Verificar CORS
        CORS_CONFIG=$(grep -c "cors" dynamic/middlewares.yml || echo 0)
        echo "üåê Configura√ß√µes CORS: $CORS_CONFIG"
        
        # Verificar redirects HTTPS
        HTTPS_REDIRECTS=$(grep -c "websecure" dynamic/services.yml || echo 0)
        echo "üîí Redirects HTTPS: $HTTPS_REDIRECTS"
        
        echo ""
        echo "üìã Recomenda√ß√µes:"
        
        if [ $SECURITY_MIDDLEWARES -eq 0 ]; then
          echo "‚ö†Ô∏è Configurar middlewares de security headers"
        fi
        
        if [ $RATE_LIMIT -eq 0 ]; then
          echo "‚ö†Ô∏è Configurar rate limiting para APIs"
        fi
        
        if [ $AUTH_MIDDLEWARES -eq 0 ]; then
          echo "‚ö†Ô∏è Considerar autentica√ß√£o para endpoints sens√≠veis"
        fi
        
    - name: üîç Verificar exposi√ß√£o de servi√ßos
      run: |
        echo "üîç Verificando exposi√ß√£o de servi√ßos..."
        
        # Verificar se dashboard est√° protegido
        if grep -A 10 "traefik-dashboard" dynamic/services.yml | grep -q "dashboard-auth"; then
          echo "‚úÖ Dashboard Traefik protegido com autentica√ß√£o"
        else
          echo "‚ö†Ô∏è Dashboard Traefik pode estar exposto!"
        fi
        
        # Verificar se APIs est√£o protegidas
        if grep -A 5 "backend-api" dynamic/services.yml | grep -q "rate-limit\|auth"; then
          echo "‚úÖ APIs backend protegidas"
        else
          echo "‚ö†Ô∏è APIs backend podem precisar de prote√ß√£o adicional"
        fi
        
        # Verificar se monitoramento est√° protegido
        if grep -A 10 "prometheus\|grafana" dynamic/services.yml | grep -q "auth"; then
          echo "‚úÖ Servi√ßos de monitoramento protegidos"
        else
          echo "‚ö†Ô∏è Servi√ßos de monitoramento podem estar expostos"
        fi

  # =============================================================================
  # COMPLIANCE E BOAS PR√ÅTICAS
  # =============================================================================
  compliance-check:
    name: ‚úÖ Verifica√ß√£o de Compliance
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: üìã Checklist de Seguran√ßa
      run: |
        echo "üìã Checklist de Seguran√ßa e Compliance"
        echo "====================================="
        
        SCORE=0
        TOTAL=10
        
        # 1. HTTPS obrigat√≥rio
        if grep -q "websecure" config/traefik.yml; then
          echo "‚úÖ HTTPS configurado"
          SCORE=$((SCORE + 1))
        else
          echo "‚ùå HTTPS n√£o configurado"
        fi
        
        # 2. Certificados SSL autom√°ticos
        if grep -q "letsencrypt" config/traefik.yml; then
          echo "‚úÖ Let's Encrypt configurado"
          SCORE=$((SCORE + 1))
        else
          echo "‚ùå Let's Encrypt n√£o configurado"
        fi
        
        # 3. Headers de seguran√ßa
        if grep -q "X-Frame-Options" dynamic/middlewares.yml; then
          echo "‚úÖ Security headers configurados"
          SCORE=$((SCORE + 1))
        else
          echo "‚ùå Security headers n√£o configurados"
        fi
        
        # 4. Rate limiting
        if grep -q "rate-limit" dynamic/middlewares.yml; then
          echo "‚úÖ Rate limiting configurado"
          SCORE=$((SCORE + 1))
        else
          echo "‚ùå Rate limiting n√£o configurado"
        fi
        
        # 5. Autentica√ß√£o para dashboard
        if grep -A 10 "traefik-dashboard" dynamic/services.yml | grep -q "auth"; then
          echo "‚úÖ Dashboard protegido"
          SCORE=$((SCORE + 1))
        else
          echo "‚ùå Dashboard n√£o protegido"
        fi
        
        # 6. TLS vers√£o m√≠nima
        if grep -q "VersionTLS12" dynamic/services.yml; then
          echo "‚úÖ TLS vers√£o m√≠nima configurada"
          SCORE=$((SCORE + 1))
        else
          echo "‚ùå TLS vers√£o m√≠nima n√£o configurada"
        fi
        
        # 7. Logs de seguran√ßa
        if grep -q "accessLog" config/traefik.yml; then
          echo "‚úÖ Logs de acesso habilitados"
          SCORE=$((SCORE + 1))
        else
          echo "‚ùå Logs de acesso n√£o habilitados"
        fi
        
        # 8. Monitoramento
        if grep -q "prometheus" config/traefik.yml; then
          echo "‚úÖ M√©tricas habilitadas"
          SCORE=$((SCORE + 1))
        else
          echo "‚ùå M√©tricas n√£o habilitadas"
        fi
        
        # 9. Health checks
        if grep -q "healthCheck" dynamic/services.yml; then
          echo "‚úÖ Health checks configurados"
          SCORE=$((SCORE + 1))
        else
          echo "‚ùå Health checks n√£o configurados"
        fi
        
        # 10. Backup de configura√ß√µes
        if [ -d "backup-roteamento" ]; then
          echo "‚úÖ Backup de configura√ß√µes existe"
          SCORE=$((SCORE + 1))
        else
          echo "‚ùå Backup de configura√ß√µes n√£o encontrado"
        fi
        
        echo ""
        echo "üìä Score de Seguran√ßa: $SCORE/$TOTAL ($(( SCORE * 100 / TOTAL ))%)"
        
        if [ $SCORE -ge 8 ]; then
          echo "üéâ Excelente! Configura√ß√£o de seguran√ßa robusta."
        elif [ $SCORE -ge 6 ]; then
          echo "üëç Boa configura√ß√£o, mas h√° espa√ßo para melhorias."
        else
          echo "‚ö†Ô∏è Configura√ß√£o de seguran√ßa precisa de aten√ß√£o!"
        fi

  # =============================================================================
  # RELAT√ìRIO FINAL DE SEGURAN√áA
  # =============================================================================
  security-report:
    name: üìã Relat√≥rio de Seguran√ßa
    runs-on: ubuntu-latest
    needs: [vulnerability-scan, ssl-check, config-audit, compliance-check]
    if: always()
    
    steps:
    - name: üìä Consolidar resultados
      run: |
        echo "üìã Relat√≥rio Consolidado de Seguran√ßa"
        echo "===================================="
        echo "üïê Executado em: $(date -u +%Y-%m-%dT%H:%M:%SZ)"
        echo "üìù Commit: ${{ github.sha }}"
        echo "üåø Branch: ${{ github.ref_name }}"
        echo ""
        
        echo "üìä Status dos Jobs:"
        echo "- Scan de Vulnerabilidades: ${{ needs.vulnerability-scan.result }}"
        echo "- Verifica√ß√£o SSL: ${{ needs.ssl-check.result }}"
        echo "- Auditoria de Configura√ß√µes: ${{ needs.config-audit.result }}"
        echo "- Verifica√ß√£o de Compliance: ${{ needs.compliance-check.result }}"
        echo ""
        
        # Determinar status geral
        if [ "${{ needs.vulnerability-scan.result }}" == "success" ] && \
           [ "${{ needs.ssl-check.result }}" == "success" ] && \
           [ "${{ needs.config-audit.result }}" == "success" ] && \
           [ "${{ needs.compliance-check.result }}" == "success" ]; then
          echo "‚úÖ Todas as verifica√ß√µes de seguran√ßa passaram!"
        else
          echo "‚ö†Ô∏è Algumas verifica√ß√µes de seguran√ßa falharam. Revisar logs."
        fi
        
        echo ""
        echo "üîó Links √∫teis:"
        echo "- Dashboard: https://traefik.conexaodesorte.com.br/dashboard/"
        echo "- Monitoramento: https://prometheus.conexaodesorte.com.br/"
        echo "- Documenta√ß√£o: README.md"