#!/usr/bin/env bash
set -euo pipefail

# Script para conectar o backend-prod √† rede overlay do Swarm
# Permite comunica√ß√£o h√≠brida entre Traefik (Swarm) e backend-prod (Compose)

NETWORK_NAME="conexao-network-swarm"
BACKEND_CONTAINER="backend-prod"

echo "üîó Conectando $BACKEND_CONTAINER √† rede overlay $NETWORK_NAME..."

# Verificar se o container backend-prod existe
if ! docker ps --filter name="$BACKEND_CONTAINER" --format "{{.Names}}" | grep -q "^$BACKEND_CONTAINER$"; then
  echo "‚ö†Ô∏è Container $BACKEND_CONTAINER n√£o encontrado ou n√£o est√° rodando"
  echo "üìã Containers dispon√≠veis:"
  docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
  exit 0
fi

# Verificar se a rede overlay existe
if ! docker network ls --filter name="$NETWORK_NAME" --format "{{.Name}}" | grep -q "^$NETWORK_NAME$"; then
  echo "‚ùå Rede $NETWORK_NAME n√£o encontrada"
  echo "üìã Redes dispon√≠veis:"
  docker network ls
  exit 1
fi

# Verificar se o container j√° est√° conectado √† rede
if docker inspect "$BACKEND_CONTAINER" --format '{{range $net, $config := .NetworkSettings.Networks}}{{$net}}{{"\n"}}{{end}}' | grep -q "^$NETWORK_NAME$"; then
  echo "‚úÖ Container $BACKEND_CONTAINER j√° est√° conectado √† rede $NETWORK_NAME"
else
  echo "üîó Conectando $BACKEND_CONTAINER √† rede $NETWORK_NAME..."
  if docker network connect "$NETWORK_NAME" "$BACKEND_CONTAINER"; then
    echo "‚úÖ Container $BACKEND_CONTAINER conectado com sucesso √† rede $NETWORK_NAME"
  else
    echo "‚ùå Falha ao conectar $BACKEND_CONTAINER √† rede $NETWORK_NAME"
    exit 1
  fi
fi

# Verificar conectividade
echo "üîç Verificando conectividade..."
docker exec "$BACKEND_CONTAINER" ping -c 1 8.8.8.8 > /dev/null 2>&1 && echo "‚úÖ Conectividade externa OK" || echo "‚ö†Ô∏è Sem conectividade externa"

echo "‚úÖ Configura√ß√£o de rede h√≠brida conclu√≠da!"