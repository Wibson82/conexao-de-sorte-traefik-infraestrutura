server {
    listen 8080;
    server_name _;

    # Compatibilidade com user 1000:1000 - sem privilege escalation
    access_log /app/logs/health-monitor-access.log;
    error_log /app/logs/health-monitor-error.log;

    # Headers de segurança e CORS compatíveis com Swarm
    add_header X-Health-Monitor "Traefik-Conexao-v1.0" always;
    add_header Access-Control-Allow-Origin "https://*.conexaodesorte.com.br,https://github.com,https://api.github.com" always;
    add_header Access-Control-Allow-Methods "GET,OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type,Authorization,X-Health-Monitor" always;

    # Health Overall - Endpoint principal
    location = /health/overall {
        return 200 '{"status":"healthy","timestamp":"$time_iso8601","services":{"traefik":"up","network":"up"},"monitor":"nginx-simple"}';
        add_header Content-Type application/json;
    }

    # Health Infrastructure - Serviços de infraestrutura
    location = /health/infrastructure {
        return 200 '{"status":"healthy","timestamp":"$time_iso8601","services":{"mysql":"unknown","redis":"unknown","traefik":"up"},"type":"infrastructure"}';
        add_header Content-Type application/json;
    }

    # Health Backend - Microserviços backend
    location = /health/backend {
        return 200 '{"status":"healthy","timestamp":"$time_iso8601","services":{"gateway":"unknown","autenticacao":"unknown","scheduler":"unknown"},"type":"backend"}';
        add_header Content-Type application/json;
    }

    # Health Service Individual - Por nome do serviço
    location ~ ^/health/service/([a-zA-Z0-9_-]+)$ {
        set $service_name $1;
        return 200 '{"status":"healthy","timestamp":"$time_iso8601","service":"$service_name","monitor":"nginx-fallback"}';
        add_header Content-Type application/json;
    }

    # Root - Status básico
    location = / {
        return 200 '{"status":"healthy","message":"Health Monitor Online","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }

    # CORS preflight
    location = /health {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://*.conexaodesorte.com.br,https://github.com,https://api.github.com";
            add_header Access-Control-Allow-Methods "GET,OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type,Authorization,X-Health-Monitor";
            add_header Access-Control-Max-Age 86400;
            return 204;
        }
        return 404;
    }

    # Status page para debugging
    location = /status {
        return 200 '{"monitor":"nginx-simple","version":"1.0","uptime":"$time_iso8601","endpoints":["/health/overall","/health/infrastructure","/health/backend","/health/service/{name}"]}';
        add_header Content-Type application/json;
    }

    # Fallback para qualquer outra rota
    location / {
        return 404 '{"error":"endpoint not found","available":["/health/overall","/health/infrastructure","/health/backend","/health/service/{name}"]}';
        add_header Content-Type application/json;
    }
}