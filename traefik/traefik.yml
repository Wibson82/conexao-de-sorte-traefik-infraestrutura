# =============================================================================
# 🚀 CONEXÃO DE SORTE - TRAEFIK v3.5.2 PRODUÇÃO ESTÁVEL
# =============================================================================
# Configuração corrigida para Traefik v3.5.2 com:
# - Provider Docker Swarm correto (docker com swarmMode: true)
# - Entry points sem middlewares inline (movidos para dynamic)
# - TLS e HTTP/3 configurados corretamente
# - Compatibilidade total com v3.5.2
# =============================================================================

---
global:
  checkNewVersion: false
  sendAnonymousUsage: false

# =============================================================================
# 📊 API E DASHBOARD - PRODUÇÃO SEGURA
# =============================================================================
api:
  dashboard: true
  insecure: false
  debug: false

# =============================================================================
# 🌐 ENTRY POINTS - SINTAXE CORRETA v3.5.3
# =============================================================================
entryPoints:
  # HTTP Entry Point - ACME challenges e redirects
  web:
    address: ":80"
    transport:
      respondingTimeouts:
        readTimeout: "10s"
        writeTimeout: "10s"
        idleTimeout: "120s"

  # HTTPS Entry Point - Produção com HTTP/3
  websecure:
    address: ":443"
    transport:
      respondingTimeouts:
        readTimeout: "30s"
        writeTimeout: "30s"
        idleTimeout: "300s"
    # HTTP/3 configurado corretamente para v3.5.3
    http3:
      advertisedPort: 443

  # Dashboard interno
  traefik:
    address: ":8080"
    transport:
      respondingTimeouts:
        readTimeout: "5s"
        writeTimeout: "5s"
        idleTimeout: "60s"

# =============================================================================
# 📡 PROVIDERS - DOCKER SWARM CORRETO v3.5.3
# =============================================================================
providers:
  # Provider Docker com Swarm Mode (sintaxe correta v3.5.3)
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false
    watch: true
    network: conexao-network-swarm
    swarmMode: true  # Modo Swarm ativado
    useBindPortIP: false
    constraints: "Label(`traefik.enable`, `true`)"

  # File Provider - Configuração dinâmica
  file:
    directory: "/etc/traefik/dynamic"
    watch: true

# =============================================================================
# 📝 LOGGING - ESTRUTURADO E SEGURO
# =============================================================================
log:
  level: INFO
  format: json
  filePath: "/dev/stdout"  # Container-friendly logging

# Access logs desabilitados para evitar vazamento de dados
# Podem ser habilitados em desenvolvimento se necessário
# accessLog:
#   format: json
#   bufferingSize: 0
#   filters:
#     statusCodes:
#       - "400-499"
#       - "500-599"

# =============================================================================
# 🔐 CERTIFICADOS SSL - LET'S ENCRYPT OTIMIZADO
# =============================================================================
certificatesResolvers:
  letsencrypt:
    acme:
      email: "facilitaservicos.tec@gmail.com"
      storage: /letsencrypt/acme.json
      # Usar HTTP challenge (mais estável que DNS)
      httpChallenge:
        entryPoint: web
      # Rate limiting interno do ACME
      caServer: "https://acme-v02.api.letsencrypt.org/directory"

  # Resolver de staging para testes (comentado para produção)
  # letsencrypt-staging:
  #   acme:
  #     email: "facilitaservicos.tec@gmail.com"
  #     storage: /letsencrypt/acme-staging.json
  #     caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
  #     httpChallenge:
  #       entryPoint: web

# =============================================================================
# 📊 MÉTRICAS E MONITORAMENTO - PROMETHEUS v3.5.3
# =============================================================================
ping:
  entryPoint: traefik

metrics:
  prometheus:
    addEntryPointsLabels: true
    addServicesLabels: true
    addRoutersLabels: true
    # Buckets otimizados para produção
    buckets:
      - 0.005
      - 0.01
      - 0.025
      - 0.05
      - 0.1
      - 0.25
      - 0.5
      - 1.0
      - 2.5
      - 5.0
      - 10.0

# =============================================================================
# 🚀 TRANSPORT CONFIGURATIONS - DESABILITADO ATÉ VALIDAR TRUSTSTORE DO CONTAINER
# =============================================================================
# serversTransport:
#   # SSL/TLS configuration para backend services
#   insecureSkipVerify: false  # Manter segurança
#   rootCAs:
#     - "/etc/ssl/certs/ca-certificates.crt"
#   # Timeouts otimizados para APIs REST
#   forwardingTimeouts:
#     dialTimeout: "10s"
#     responseHeaderTimeout: "30s"
#     expectContinueTimeout: "1s"
#     idleConnTimeout: "90s"
#   # Connection pooling para performance
#   maxIdleConnsPerHost: 10
#   disableHTTP2: false  # Manter HTTP/2 habilitado

# =============================================================================
# 🔧 CONFIGURAÇÕES EXPERIMENTAIS - DESABILITADAS ATÉ VALIDAÇÃO
# =============================================================================
# experimental:
#   http3: true

# =============================================================================
# 📈 CLUSTER CONFIGURATION - PENDENTE DE CONSUL/ETCD
# =============================================================================
# cluster:
#   store: "consul"
#   prefix: "/traefik"

# Os blocos acima permanecem comentados até que os backends necessários
# (Consul/etcd e validação de plugins) estejam provisionados em produção.
