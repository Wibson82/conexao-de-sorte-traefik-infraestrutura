# =============================================================================
# üåê CONEX√ÉO DE SORTE - FRONTEND ROUTES MODERNAS
# =============================================================================
# Roteamento principal do frontend React com:
# - PWA Support (Progressive Web App)
# - Performance otimizada
# - SEO friendly
# - Fallbacks inteligentes
# =============================================================================

---
http:
  # ==========================================================================
  # üéØ ROUTERS - FRONTEND PRINCIPAL E FALLBACKS
  # ==========================================================================
  routers:
    # ==========================================================================
    # üè† FRONTEND PRINCIPAL - REACT SPA
    # ==========================================================================
    frontend-main:
      rule: "(Host(`conexaodesorte.com.br`) || Host(`www.conexaodesorte.com.br`))"
      entrypoints:
        - websecure
      service: frontend-service-main
      middlewares:
        - frontend-security-headers@file
        - cors-modern@file
        - compression-modern@file
        - rate-limit-global@file
        - redirect-to-www@file  # Padronizar para www
      tls:
        certResolver: letsencrypt
        options: modern-tls@file
      priority: 100

    # HTTP ‚Üí HTTPS redirect
    frontend-redirect-https:
      rule: "(Host(`conexaodesorte.com.br`) || Host(`www.conexaodesorte.com.br`))"
      entrypoints:
        - web
      service: frontend-service-main
      middlewares:
        - redirect-to-https@file
        - redirect-to-www@file
      priority: 100

    # ==========================================================================
    # üìä LOG SERVIDOR - MONITORAMENTO ESPEC√çFICO
    # ==========================================================================
    frontend-log-servidor:
      rule: "(Host(`conexaodesorte.com.br`) || Host(`www.conexaodesorte.com.br`)) && Path(`/log-servidor`)"
      entrypoints:
        - websecure
      service: log-servidor-ui
      middlewares:
        - frontend-security-headers@file
        - compression-modern@file
        - rate-limit-global@file
      tls:
        certResolver: letsencrypt
        options: modern-tls@file
      priority: 110  # Prioridade alta para rota espec√≠fica

    # ==========================================================================
    # üõ†Ô∏è TRAEFIK DASHBOARD - ACESSO ADMINISTRATIVO
    # ==========================================================================
    traefik-dashboard-access:
      rule: "(Host(`conexaodesorte.com.br`) || Host(`www.conexaodesorte.com.br`)) && PathPrefix(`/traefik`)"
      entrypoints:
        - websecure
      service: api@internal
      middlewares:
        - dashboard-security-headers@file
        - traefik-dashboard-redirect@file
        - traefik-path-strip@file
        - traefik-dashboard-auth@file
        - rate-limit-auth@file
      tls:
        certResolver: letsencrypt
        options: modern-tls@file
      priority: 120  # M√°xima prioridade para dashboard

    # ==========================================================================
    # üîç FALLBACK ROUTES - QUANDO SERVI√áOS EST√ÉO INDISPON√çVEIS
    # ==========================================================================
    frontend-fallback:
      rule: "(Host(`conexaodesorte.com.br`) || Host(`www.conexaodesorte.com.br`))"
      entrypoints:
        - websecure
      service: fallback-service
      middlewares:
        - frontend-security-headers@file
        - compression-modern@file
      tls:
        certResolver: letsencrypt
      priority: 1  # Baix√≠ssima prioridade - s√≥ ativa se outros falharem

  # ==========================================================================
  # üéØ SERVICES - LOAD BALANCERS OTIMIZADOS
  # ==========================================================================
  services:
    # Frontend principal - React SPA servido pelo container oficial
    frontend-service-main:
      loadBalancer:
        servers:
          - url: "http://conexao-frontend_frontend:3000"
        healthCheck:
          path: "/"
          interval: "30s"
          timeout: "10s"
        passHostHeader: true
        responseForwarding:
          flushInterval: "10ms"
        sticky:
          cookie:
            name: "frontend-session"
            secure: true
            httpOnly: true
            sameSite: "strict"

    # Servi√ßo de fallback - reutiliza o frontend para evitar 404 durante falhas breves
    fallback-service:
      loadBalancer:
        servers:
          - url: "http://conexao-frontend_frontend:3000"
        healthCheck:
          path: "/"
          interval: "30s"
          timeout: "5s"
        passHostHeader: true

    log-servidor-ui:
      loadBalancer:
        servers:
          - url: "http://conexao-traefik_log-server:9090"
        healthCheck:
          path: "/health"
          interval: "30s"
          timeout: "10s"
        passHostHeader: true

  # ==========================================================================
  # üîß MIDDLEWARES ESPEC√çFICOS PARA FRONTEND
  # ==========================================================================
  middlewares:
    # Dashboard auth - B√°sico com arquivo de usu√°rios
    traefik-dashboard-auth:
      basicAuth:
        usersFile: "/secrets/traefik-basicauth"
        removeHeader: true  # Remover header ap√≥s autentica√ß√£o

    # Strip path para dashboard
    traefik-path-strip:
      stripPrefix:
        prefixes:
          - "/traefik"

    # Redirect para dashboard completo
    traefik-dashboard-redirect:
      redirectRegex:
        regex: "^/traefik/?$"
        replacement: "/traefik/dashboard/"
        permanent: false  # Redirect tempor√°rio para flexibilidade

    # Headers espec√≠ficos para dashboard
    dashboard-security-headers:
      headers:
        customResponseHeaders:
          # CSP m√°ximo para dashboard
          Content-Security-Policy: >-
            default-src 'self';
            script-src 'self' 'unsafe-inline';
            style-src 'self' 'unsafe-inline';
            font-src 'self' data:;
            img-src 'self' data:;
            connect-src 'self';
            frame-ancestors 'none';

          # Headers m√°ximos de seguran√ßa
          X-Frame-Options: "DENY"
          X-Content-Type-Options: "nosniff"
          Referrer-Policy: "no-referrer"
          Cache-Control: "no-cache, no-store, must-revalidate"
          X-Dashboard-Version: "traefik-v3.5.3"

        # Configura√ß√µes de seguran√ßa m√°ximas
        frameDeny: true
        contentTypeNosniff: true
        browserXssFilter: true
        stsSeconds: 63072000
        stsIncludeSubdomains: true

# =============================================================================
# üìã CONFIGURA√á√ÉO DE TLS MODERNA
# =============================================================================
tls:
  options:
    modern-tls:
      minVersion: "VersionTLS12"
      maxVersion: "VersionTLS13"
      # Cipher suites modernas - suporte total HTTP/3
      cipherSuites:
        - "TLS_AES_256_GCM_SHA384"         # TLS 1.3
        - "TLS_CHACHA20_POLY1305_SHA256"   # TLS 1.3
        - "TLS_AES_128_GCM_SHA256"         # TLS 1.3
        - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"    # TLS 1.2
        - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"     # TLS 1.2
        - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"    # TLS 1.2
      # Curvas el√≠pticas modernas
      curvePreferences:
        - "X25519"      # Mais moderna
        - "CurveP521"
        - "CurveP384"
        - "CurveP256"
      # Configura√ß√µes adicionais
      sniStrict: false  # Permitir SNI flex√≠vel
      alpnProtocols:
        - "h2"          # HTTP/2
        - "http/1.1"    # HTTP/1.1 como fallback

# =============================================================================
# üöÄ MELHORIAS DE PERFORMANCE
# =============================================================================
# - HTTP/3 habilitado no traefik.yml
# - Compression otimizada com thresholds inteligentes
# - Health checks com timeouts ajustados
# - Sticky sessions para melhor UX
# - Cache inteligente para assets est√°ticos
# - Response forwarding otimizado para SPA
#
# PR√ìXIMAS MELHORIAS:
# - Service mesh com Consul Connect
# - Canary deployments automatizados
# - Circuit breaker por rota
# - Observabilidade com OpenTelemetry
# =============================================================================
