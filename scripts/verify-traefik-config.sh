#!/bin/bash

# =============================================================================
# üîç VERIFICADOR DE CONFIGURA√á√ÉO DO TRAEFIK
# =============================================================================
# Este script verifica se a configura√ß√£o do Traefik est√° correta para a vers√£o atual

set -e

TRAEFIK_VERSION=$(docker image ls | grep traefik | awk '{print $2}' | head -n 1)
CONFIG_FILE="./traefik/traefik.yml"
DYNAMIC_DIR="./traefik/dynamic"

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

echo -e "${BLUE}=== üîç Verificando compatibilidade da configura√ß√£o do Traefik ${TRAEFIK_VERSION} ===${NC}"

# Verificar se o arquivo de configura√ß√£o principal existe
if [ ! -f "$CONFIG_FILE" ]; then
    echo -e "${RED}‚ùå Arquivo de configura√ß√£o principal n√£o encontrado: $CONFIG_FILE${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Arquivo de configura√ß√£o principal encontrado: $CONFIG_FILE${NC}"

# Verificar se h√° refer√™ncias incompat√≠veis no arquivo principal
if grep -q "swarmMode:" "$CONFIG_FILE"; then
    echo -e "${RED}‚ùå Configura√ß√£o incompat√≠vel detectada: swarmMode no arquivo $CONFIG_FILE${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è  No Traefik 3.x, o SwarmMode √© detectado automaticamente${NC}"
    echo -e "${BLUE}‚ÑπÔ∏è  Recomenda√ß√£o: Remover a linha 'swarmMode: true' do arquivo ${CONFIG_FILE}${NC}"
else
    echo -e "${GREEN}‚úÖ Configura√ß√£o do Docker provider est√° correta${NC}"
fi

# Verificar configura√ß√£o do provider Docker
if grep -q "docker:" "$CONFIG_FILE"; then
    echo -e "${GREEN}‚úÖ Provider Docker configurado${NC}"

    # Verificar se o endpoint est√° configurado
    if grep -q "endpoint:" "$CONFIG_FILE"; then
        echo -e "${GREEN}‚úÖ Endpoint Docker configurado${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Endpoint Docker n√£o encontrado${NC}"
        echo -e "${BLUE}‚ÑπÔ∏è  Recomenda√ß√£o: Adicionar 'endpoint: \"unix:///var/run/docker.sock\"' na se√ß√£o docker${NC}"
    fi

    # Verificar se a rede est√° configurada
    if grep -q "network:" "$CONFIG_FILE"; then
        NETWORK=$(grep "network:" "$CONFIG_FILE" | awk '{print $2}' | tr -d '"')
        echo -e "${GREEN}‚úÖ Rede Docker configurada: $NETWORK${NC}"

        # Verificar se a rede existe
        if docker network ls | grep -q "$NETWORK"; then
            echo -e "${GREEN}‚úÖ Rede $NETWORK existe no Docker${NC}"
        else
            echo -e "${RED}‚ùå Rede $NETWORK n√£o existe no Docker${NC}"
            echo -e "${BLUE}‚ÑπÔ∏è  Recomenda√ß√£o: Criar a rede com 'docker network create --driver overlay $NETWORK'${NC}"
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Rede Docker n√£o configurada${NC}"
        echo -e "${BLUE}‚ÑπÔ∏è  Recomenda√ß√£o: Adicionar 'network: conexao-network-swarm' na se√ß√£o docker${NC}"
    fi
else
    echo -e "${RED}‚ùå Provider Docker n√£o encontrado no arquivo $CONFIG_FILE${NC}"
    echo -e "${BLUE}‚ÑπÔ∏è  Recomenda√ß√£o: Adicionar a se√ß√£o providers.docker no arquivo ${CONFIG_FILE}${NC}"
fi

# Verificar se os arquivos din√¢micos est√£o presentes
if [ -d "$DYNAMIC_DIR" ]; then
    echo -e "${GREEN}‚úÖ Diret√≥rio de configura√ß√µes din√¢micas encontrado: $DYNAMIC_DIR${NC}"

    # Verificar arquivos essenciais
    for file in "middlewares.yml" "tls.yml" "security-headers.yml"; do
        if [ -f "${DYNAMIC_DIR}/${file}" ]; then
            echo -e "${GREEN}‚úÖ Arquivo din√¢mico encontrado: ${file}${NC}"
        else
            echo -e "${RED}‚ùå Arquivo din√¢mico ausente: ${file}${NC}"
        fi
    done
else
    echo -e "${RED}‚ùå Diret√≥rio de configura√ß√µes din√¢micas n√£o encontrado: $DYNAMIC_DIR${NC}"
    exit 1
fi

echo -e "${BLUE}=== üéâ Verifica√ß√£o conclu√≠da ===${NC}"
echo -e "${YELLOW}‚ö†Ô∏è  Lembre-se de validar o funcionamento do Traefik ap√≥s qualquer altera√ß√£o de configura√ß√£o${NC}"
echo -e "${BLUE}‚ÑπÔ∏è  Use 'docker compose up -d' para aplicar as altera√ß√µes${NC}"