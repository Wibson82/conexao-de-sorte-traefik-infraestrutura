# Docker Compose file - version removed (obsolete in newer versions)

# ============================================================================
# üåê CONEX√ÉO DE SORTE - TRAEFIK GATEWAY (SEM CONFLITOS)
# ============================================================================
# 
# CORRE√á√ÉO APLICADA:
# ‚úÖ REMOVIDO: Porta 8080 externa (evita conflito com backend-prod)
# ‚úÖ DASHBOARD: Apenas via HTTPS host-based routing
# ‚úÖ COEXIST√äNCIA: Funciona junto com containers existentes
# 
# CONTAINERS EXISTENTES NO SERVIDOR:
# - traefik-microservices (ATUAL - ser√° substitu√≠do)
# - conexao-mysql:3306 (mant√©m funcionando)
# - backend-prod:8080-interno (sem conflito)  
# - conexao-prometheus:9090 (sem conflito)
# ============================================================================

services:
  # ============================================================================
  # üåê TRAEFIK - LOAD BALANCER & SSL TERMINATION (SEM CONFLITOS)
  # ============================================================================
  traefik:
    image: traefik:v3.1
    container_name: traefik-microservices-v2
    restart: unless-stopped
    ports:
      - "80:80"      # HTTP - mant√©m
      - "443:443"    # HTTPS - mant√©m
      # ‚ùå REMOVIDO: "8080:8080" para evitar conflito com backend-prod
    environment:
      - TZ=America/Sao_Paulo
      - LETSENCRYPT_EMAIL=facilitaservicos.dev@gmail.com
    networks:
      - conexao-network
    volumes:
      # Docker socket para service discovery autom√°tico
      - /var/run/docker.sock:/var/run/docker.sock:ro
      
      # Configura√ß√µes Traefik
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/dynamic:/etc/traefik/dynamic:ro
      
      # SSL/TLS
      - ./letsencrypt:/letsencrypt
      
      # Secrets (se necess√°rio)
      - ./secrets:/secrets:ro
    labels:
      # Habilit√°-lo para auto-descoberta
      - traefik.enable=true
      
      # ‚úÖ Dashboard APENAS via HTTPS (sem porta externa conflitante)
      - traefik.http.routers.dashboard.rule=Host(`traefik.conexaodesorte.com.br`)
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.tls.certresolver=letsencrypt
      - traefik.http.routers.dashboard.middlewares=dashboard-auth@file
      - traefik.http.routers.dashboard.service=api@internal
      
      # Dashboard redirect HTTP ‚Üí HTTPS
      - traefik.http.routers.dashboard-redirect.rule=Host(`traefik.conexaodesorte.com.br`)
      - traefik.http.routers.dashboard-redirect.entrypoints=web
      - traefik.http.routers.dashboard-redirect.middlewares=https-redirect@file
      
      # ‚úÖ ROTEAMENTO PARA BACKEND EXISTENTE (coexist√™ncia)
      - traefik.http.routers.backend-legacy.rule=Host(`api.conexaodesorte.com.br`) && PathPrefix(`/legacy`)
      - traefik.http.routers.backend-legacy.entrypoints=websecure
      - traefik.http.routers.backend-legacy.tls.certresolver=letsencrypt
      - traefik.http.routers.backend-legacy.service=backend-legacy
      - traefik.http.services.backend-legacy.loadbalancer.server.url=http://backend-prod:8080
      
      # ‚úÖ ROTEAMENTO PARA MYSQL EXISTENTE (coexist√™ncia)
      - traefik.tcp.routers.mysql-legacy.rule=HostSNI(`mysql.conexaodesorte.com.br`)
      - traefik.tcp.routers.mysql-legacy.entrypoints=mysql
      - traefik.tcp.routers.mysql-legacy.service=mysql-legacy
      - traefik.tcp.services.mysql-legacy.loadbalancer.server.address=conexao-mysql:3306
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

# ============================================================================
# üåê NETWORKS
# ============================================================================
networks:
  conexao-network:
    name: conexao-network
    external: true  # Rede criada pelo projeto infraestrutura-core

# ============================================================================
# üìã INSTRU√á√ïES DE DEPLOY SEM CONFLITOS
# ============================================================================
#
# 1. PARAR TRAEFIK ATUAL:
#    docker stop traefik-microservices
#
# 2. BACKUP CONFIGURA√á√ÉO:
#    docker cp traefik-microservices:/traefik.yml ./backup-traefik.yml
#
# 3. DEPLOY NOVA VERS√ÉO:
#    docker-compose -f docker-compose-sem-conflitos.yml up -d
#
# 4. VERIFICAR STATUS:
#    docker ps | grep traefik
#    curl -k https://traefik.conexaodesorte.com.br
#
# 5. ACESSOS P√ìS-DEPLOY:
#    - Dashboard: https://traefik.conexaodesorte.com.br
#    - Backend Legacy: https://api.conexaodesorte.com.br/legacy
#    - MySQL Legacy: mysql.conexaodesorte.com.br:3306
#
# ============================================================================
# üìä COEXIST√äNCIA COM CONTAINERS ATUAIS
# ============================================================================
#
# ‚úÖ COMPATIBILIDADE GARANTIDA:
# - conexao-mysql:3306 ‚Üí Acess√≠vel via Traefik ou direto
# - backend-prod:8080 ‚Üí Roteado via /legacy path
# - conexao-prometheus:9090 ‚Üí Sem altera√ß√µes
# 
# ‚ùå CONFLITOS RESOLVIDOS:
# - Traefik dashboard n√£o usa mais porta 8080 externa
# - Service discovery funciona para novos microservi√ßos
# - SSL termination para todos os servi√ßos
#
# ============================================================================