#!/bin/bash
# =============================================================================
# SCRIPT: Valida√ß√£o P√≥s-Deploy
# =============================================================================
# Objetivo: Validar se o deploy foi realizado com sucesso, verificando a porta correta
# Uso: ./scripts/deploy/run-validation.sh [teste|prod]
# =============================================================================

set -euo pipefail

# Configura√ß√µes
DEPLOY_TYPE="${1:-teste}"
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîç VALIDA√á√ÉO DE DEPLOY - CONEX√ÉO DE SORTE${NC}"
echo "=================================="

# Validar par√¢metros
if [[ -z "$DEPLOY_TYPE" ]]; then
    echo -e "${RED}‚ùå Tipo de deploy n√£o especificado${NC}"
    echo "Uso: $0 [teste|prod]"
    exit 1
fi

# Configurar porta esperada
if [[ "${DEPLOY_TYPE}" == "teste" ]]; then
    CONTAINER_NAME="backend-teste"
    EXPECTED_PORT="8081"
elif [[ "${DEPLOY_TYPE}" == "prod" ]]; then
    CONTAINER_NAME="backend-prod"
    EXPECTED_PORT="8080"
else
    echo -e "${RED}‚ùå Tipo de deploy inv√°lido: ${DEPLOY_TYPE}${NC}"
    echo "Uso: $0 [teste|prod]"
    exit 1
fi

echo -e "${BLUE}üîç Validando deploy do tipo: ${DEPLOY_TYPE}${NC}"
echo -e "${BLUE}üîç Porta esperada: ${EXPECTED_PORT}${NC}"

# Verificar se container est√° em execu√ß√£o
if ! docker ps --format '{{.Names}}' | grep -q "^${CONTAINER_NAME}$"; then
    echo -e "${RED}‚ùå Container ${CONTAINER_NAME} n√£o est√° em execu√ß√£o${NC}"
    echo "Verifique os logs do container para mais detalhes"
    docker ps -a --filter name="${CONTAINER_NAME}" --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'
    exit 1
fi

# Executar script de valida√ß√£o
if [[ -f "/app/validate-port.sh" ]]; then
    echo -e "${BLUE}üîß Executando script de valida√ß√£o de porta...${NC}"
    /app/validate-port.sh "${DEPLOY_TYPE}"
else
    echo -e "${YELLOW}‚ö†Ô∏è Script de valida√ß√£o n√£o encontrado${NC}"

    # Verificar porta atrav√©s de curl
    echo -e "${BLUE}üîç Verificando resposta da aplica√ß√£o na porta ${EXPECTED_PORT}...${NC}"
    if curl -s -f "http://localhost:${EXPECTED_PORT}/actuator/health" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Aplica√ß√£o est√° respondendo na porta ${EXPECTED_PORT}!${NC}"
    else
        echo -e "${RED}‚ùå Aplica√ß√£o n√£o est√° respondendo na porta ${EXPECTED_PORT}${NC}"
        echo -e "${YELLOW}‚ö†Ô∏è Verifique os logs do container para mais detalhes${NC}"
        docker logs --tail 50 "${CONTAINER_NAME}"
        exit 1
    fi
fi

echo -e "${GREEN}üéâ Valida√ß√£o de deploy conclu√≠da com sucesso!${NC}"
echo -e "${BLUE}üí° Informa√ß√µes do container:${NC}"
docker ps --filter name="${CONTAINER_NAME}" --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}\t{{.Image}}'

echo -e "${GREEN}‚úÖ O deploy para o ambiente ${DEPLOY_TYPE} est√° utilizando a porta ${EXPECTED_PORT} conforme esperado!${NC}"
