#!/bin/bash

echo "üß™ Testando corre√ß√µes do Traefik..."

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Fun√ß√µes de log
log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

# Verificar se estamos no diret√≥rio correto
if [[ ! -f "deploy/docker-compose.prod.yml" ]]; then
    log_error "Execute este script no diret√≥rio raiz do projeto"
    exit 1
fi

log_info "=== VERIFICA√á√ÉO DAS CORRE√á√ïES APLICADAS ==="

# 1. Verificar se o perfil Spring Boot est√° correto
log_info "1. Verificando perfil Spring Boot..."
if grep -q "SPRING_PROFILES_ACTIVE=prod,azure" deploy/docker-compose.prod.yml; then
    log_success "‚úÖ Perfil Spring Boot corrigido para 'prod,azure'"
else
    log_error "‚ùå Perfil Spring Boot ainda incorreto"
fi

# 2. Verificar se a rede traefik-network est√° configurada
log_info "2. Verificando rede traefik-network..."
if grep -q "traefik-network:" deploy/docker-compose.prod.yml; then
    log_success "‚úÖ Rede traefik-network configurada"
else
    log_error "‚ùå Rede traefik-network n√£o configurada"
fi

# 3. Verificar se o health check do Traefik est√° correto
log_info "3. Verificando health check do Traefik..."
if grep -q "http://localhost:8080/api/rawdata" deploy/docker-compose.prod.yml; then
    log_success "‚úÖ Health check do Traefik corrigido"
else
    log_error "‚ùå Health check do Traefik ainda incorreto"
fi

# 4. Verificar se o endpoint do Docker est√° configurado
log_info "4. Verificando endpoint do Docker..."
if grep -q "providers.docker.endpoint" deploy/docker-compose.prod.yml; then
    log_success "‚úÖ Endpoint do Docker configurado"
else
    log_error "‚ùå Endpoint do Docker n√£o configurado"
fi

# 5. Verificar se o Traefik est√° conectado √†s duas redes
log_info "5. Verificando configura√ß√£o de redes do Traefik..."
if grep -A 10 "networks:" deploy/docker-compose.prod.yml | grep -A 5 "traefik:" | grep -q "traefik-network"; then
    log_success "‚úÖ Traefik conectado √† rede traefik-network"
else
    log_error "‚ùå Traefik n√£o conectado √† rede traefik-network"
fi

log_info "=== RESUMO DAS CORRE√á√ïES ==="

echo ""
log_info "üìã Corre√ß√µes aplicadas no docker-compose.prod.yml:"
echo "   ‚Ä¢ SPRING_PROFILES_ACTIVE=prod,azure (era 'production,azure')"
echo "   ‚Ä¢ Adicionada rede traefik-network"
echo "   ‚Ä¢ Health check corrigido para /api/rawdata"
echo "   ‚Ä¢ Endpoint do Docker configurado explicitamente"
echo "   ‚Ä¢ Traefik conectado √†s duas redes"
echo ""

log_info "üöÄ Para aplicar no servidor de produ√ß√£o:"
echo "   1. Fazer backup do docker-compose atual"
echo "   2. Aplicar as corre√ß√µes no arquivo"
echo "   3. Executar: ./scripts/corrigir-traefik.sh"
echo "   4. Verificar logs: docker logs conexao-traefik"
echo ""

log_success "üéâ Verifica√ß√£o conclu√≠da! As corre√ß√µes est√£o prontas para deploy."
