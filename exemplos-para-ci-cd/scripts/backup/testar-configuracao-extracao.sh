#!/bin/bash

# =============================================================================
# SCRIPT DE TESTE - CONFIGURA√á√ÉO DE EXTRA√á√ÉO
# =============================================================================
# Testa se a configura√ß√£o de extra√ß√£o est√° correta e se a express√£o cron
# est√° sendo interpretada corretamente pelo Spring Boot
# =============================================================================

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîç TESTANDO CONFIGURA√á√ÉO DE EXTRA√á√ÉO${NC}"
echo "=================================================="

# Verificar se estamos no diret√≥rio correto
if [ ! -f "pom.xml" ]; then
    echo -e "${RED}‚ùå Erro: Execute este script na raiz do projeto${NC}"
    exit 1
fi

echo -e "${YELLOW}üìã Verificando configura√ß√µes de extra√ß√£o...${NC}"

# 1. Verificar se a express√£o cron est√° correta no c√≥digo
echo -e "${BLUE}1. Verificando express√£o cron no OrquestradorExtracoes...${NC}"
if grep -q "0 0 8,12,18,22 \* \*" src/main/java/br/tec/facilitaservicos/conexaodesorte/servico/extracao/OrquestradorExtracoes.java; then
    echo -e "${GREEN}‚úÖ Express√£o cron encontrada: 0 0 8,12,18,22 * *${NC}"
else
    echo -e "${RED}‚ùå Express√£o cron n√£o encontrada no OrquestradorExtracoes${NC}"
fi

# 2. Verificar configura√ß√£o no application.yml
echo -e "${BLUE}2. Verificando configura√ß√£o no application.yml...${NC}"
if grep -q "cron: \${APP_EXTRACAO_CRON:0 0 8,12,18,22 \* \*}" src/main/resources/application.yml; then
    echo -e "${GREEN}‚úÖ Configura√ß√£o de cron encontrada no application.yml${NC}"
else
    echo -e "${RED}‚ùå Configura√ß√£o de cron n√£o encontrada no application.yml${NC}"
fi

# 3. Verificar se h√° configura√ß√µes conflitantes
echo -e "${BLUE}3. Verificando configura√ß√µes conflitantes...${NC}"
CONFLICTING_FILES=$(grep -r "app\.extracao\.cron" src/main/resources/ --include="*.yml" --include="*.yaml" --include="*.properties" 2>/dev/null || true)
if [ -n "$CONFLICTING_FILES" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Configura√ß√µes encontradas:${NC}"
    echo "$CONFLICTING_FILES"
else
    echo -e "${GREEN}‚úÖ Nenhuma configura√ß√£o conflitante encontrada${NC}"
fi

# 4. Verificar se h√° vari√°veis de ambiente definidas
echo -e "${BLUE}4. Verificando vari√°veis de ambiente...${NC}"
if [ -n "$APP_EXTRACAO_CRON" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Vari√°vel APP_EXTRACAO_CRON definida: $APP_EXTRACAO_CRON${NC}"
    # Verificar se tem 6 campos
    FIELD_COUNT=$(echo "$APP_EXTRACAO_CRON" | wc -w)
    if [ "$FIELD_COUNT" -eq 6 ]; then
        echo -e "${GREEN}‚úÖ Vari√°vel tem 6 campos (correto)${NC}"
    else
        echo -e "${RED}‚ùå Vari√°vel tem $FIELD_COUNT campos (deveria ter 6)${NC}"
    fi
else
    echo -e "${GREEN}‚úÖ Vari√°vel APP_EXTRACAO_CRON n√£o definida (usando padr√£o)${NC}"
fi

# 5. Testar compila√ß√£o
echo -e "${BLUE}5. Testando compila√ß√£o...${NC}"
if mvn compile -q; then
    echo -e "${GREEN}‚úÖ Compila√ß√£o bem-sucedida${NC}"
else
    echo -e "${RED}‚ùå Erro na compila√ß√£o${NC}"
    exit 1
fi

# 6. Verificar se h√° problemas de sintaxe na express√£o cron
echo -e "${BLUE}6. Verificando sintaxe da express√£o cron...${NC}"
CRON_EXPRESSION="0 0 8,12,18,22 * *"
echo -e "${YELLOW}Express√£o cron: $CRON_EXPRESSION${NC}"

# Verificar se tem 6 campos
FIELD_COUNT=$(echo "$CRON_EXPRESSION" | wc -w)
if [ "$FIELD_COUNT" -eq 6 ]; then
    echo -e "${GREEN}‚úÖ Express√£o tem 6 campos (correto)${NC}"
else
    echo -e "${RED}‚ùå Express√£o tem $FIELD_COUNT campos (deveria ter 6)${NC}"
fi

# Verificar formato dos campos
echo -e "${YELLOW}An√°lise dos campos:${NC}"
echo "  Campo 1 (segundo): 0"
echo "  Campo 2 (minuto): 0"
echo "  Campo 3 (hora): 8,12,18,22"
echo "  Campo 4 (dia): *"
echo "  Campo 5 (m√™s): *"
echo "  Campo 6 (dia da semana): *"

# 7. Verificar se h√° problemas no Spring Boot
echo -e "${BLUE}7. Verificando configura√ß√£o do Spring Boot...${NC}"
if grep -q "@EnableScheduling" src/main/java/br/tec/facilitaservicos/conexaodesorte/Application.java; then
    echo -e "${GREEN}‚úÖ @EnableScheduling encontrado na classe Application${NC}"
else
    echo -e "${RED}‚ùå @EnableScheduling n√£o encontrado na classe Application${NC}"
fi

# 8. Verificar configura√ß√£o de task scheduling
echo -e "${BLUE}8. Verificando configura√ß√£o de task scheduling...${NC}"
if grep -q "task:" src/main/resources/application.yml; then
    echo -e "${GREEN}‚úÖ Configura√ß√£o de task encontrada${NC}"
    grep -A 10 "task:" src/main/resources/application.yml | head -10
else
    echo -e "${YELLOW}‚ö†Ô∏è  Configura√ß√£o de task n√£o encontrada${NC}"
fi

echo ""
echo -e "${BLUE}üìä RESUMO DO TESTE${NC}"
echo "=================================================="

# Contar problemas encontrados
PROBLEMS=0

if ! grep -q "0 0 8,12,18,22 \* \*" src/main/java/br/tec/facilitaservicos/conexaodesorte/servico/extracao/OrquestradorExtracoes.java; then
    PROBLEMS=$((PROBLEMS + 1))
fi

if ! grep -q "cron: \${APP_EXTRACAO_CRON:0 0 8,12,18,22 \* \*}" src/main/resources/application.yml; then
    PROBLEMS=$((PROBLEMS + 1))
fi

if [ -n "$APP_EXTRACAO_CRON" ] && [ "$(echo "$APP_EXTRACAO_CRON" | wc -w)" -ne 6 ]; then
    PROBLEMS=$((PROBLEMS + 1))
fi

if ! grep -q "@EnableScheduling" src/main/java/br/tec/facilitaservicos/conexaodesorte/Application.java; then
    PROBLEMS=$((PROBLEMS + 1))
fi

if [ "$PROBLEMS" -eq 0 ]; then
    echo -e "${GREEN}‚úÖ TODOS OS TESTES PASSARAM!${NC}"
    echo -e "${GREEN}‚úÖ Configura√ß√£o de extra√ß√£o est√° correta${NC}"
    exit 0
else
    echo -e "${RED}‚ùå $PROBLEMS PROBLEMA(S) ENCONTRADO(S)${NC}"
    echo -e "${YELLOW}üí° Verifique os itens marcados com ‚ùå acima${NC}"
    exit 1
fi
