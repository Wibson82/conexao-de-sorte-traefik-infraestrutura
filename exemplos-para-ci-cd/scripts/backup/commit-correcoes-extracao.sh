#!/bin/bash

# =============================================================================
# SCRIPT DE COMMIT - CORRE√á√ïES DE EXTRA√á√ÉO
# =============================================================================
# Faz commit das corre√ß√µes relacionadas √† configura√ß√£o de extra√ß√£o
# e express√£o cron
# =============================================================================

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üìù FAZENDO COMMIT DAS CORRE√á√ïES DE EXTRA√á√ÉO${NC}"
echo "=================================================="

# Verificar se estamos no diret√≥rio correto
if [ ! -f "pom.xml" ]; then
    echo -e "${RED}‚ùå Erro: Execute este script na raiz do projeto${NC}"
    exit 1
fi

# Verificar se h√° mudan√ßas para commitar
if [ -z "$(git status --porcelain)" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Nenhuma mudan√ßa para commitar${NC}"
    exit 0
fi

echo -e "${YELLOW}üìã Verificando mudan√ßas...${NC}"

# Mostrar status das mudan√ßas
echo -e "${BLUE}Status das mudan√ßas:${NC}"
git status --short

echo ""

# Verificar se h√° arquivos espec√≠ficos modificados
MODIFIED_FILES=$(git status --porcelain | grep -E "\.(java|yml|yaml|properties)$" | wc -l)

if [ "$MODIFIED_FILES" -eq 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Nenhum arquivo de configura√ß√£o modificado${NC}"
    exit 0
fi

echo -e "${BLUE}üìÅ Arquivos modificados:${NC}"
git status --porcelain | grep -E "\.(java|yml|yaml|properties)$"

echo ""

# Adicionar arquivos modificados
echo -e "${YELLOW}üì¶ Adicionando arquivos...${NC}"
git add .

# Verificar se h√° arquivos para commitar
if [ -z "$(git diff --cached --name-only)" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Nenhum arquivo para commitar${NC}"
    exit 0
fi

# Criar mensagem de commit
COMMIT_MESSAGE="fix: Corrigir configura√ß√£o de extra√ß√£o e express√£o cron

- Adicionar configura√ß√£o expl√≠cita de extra√ß√£o no application.yml
- Adicionar configura√ß√£o de extra√ß√£o no application-production.yml
- Corrigir express√£o cron para formato Spring Boot (6 campos)
- Adicionar scripts de teste para configura√ß√£o de extra√ß√£o
- Verificar sintaxe YAML e configura√ß√µes do Spring Boot

Resolve erro: 'Cron expression must consist of 6 fields (found 5)'
Melhora: Configura√ß√£o centralizada de extra√ß√£o
Testa: Scripts de valida√ß√£o de configura√ß√£o"

echo -e "${BLUE}üí¨ Mensagem de commit:${NC}"
echo "$COMMIT_MESSAGE"
echo ""

# Fazer commit
echo -e "${YELLOW}üìù Fazendo commit...${NC}"
git commit -m "$COMMIT_MESSAGE"

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Commit realizado com sucesso!${NC}"
    echo ""
    echo -e "${BLUE}üìä Resumo do commit:${NC}"
    echo "=================================================="
    echo -e "${GREEN}‚úÖ Arquivos modificados:${NC}"
    git diff --cached --name-only
    echo ""
    echo -e "${GREEN}‚úÖ Hash do commit:${NC}"
    git rev-parse HEAD
    echo ""
    echo -e "${YELLOW}üí° Para fazer push: git push origin main${NC}"
else
    echo -e "${RED}‚ùå Erro ao fazer commit${NC}"
    exit 1
fi
